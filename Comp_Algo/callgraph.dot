digraph {
	tooltip=" "
	graph [fontname=Arial, nodesep=0.125, ranksep=0.25];
	node [fontcolor=white, fontname=Arial, height=0, shape=box, style=filled, width=0];
	edge [fontname=Arial];
	1 [color="#f15902", fontcolor="#ffffff", fontsize="10.00", label="main\n90.91%\n(0.00%)"];
	1 -> 2 [arrowsize="0.91", color="#e59f04", fontcolor="#e59f04", fontsize="10.00", label="82.83%\n1×", labeldistance="3.31", penwidth="3.31"];
	1 -> 13 [arrowsize="0.35", color="#0d317d", fontcolor="#0d317d", fontsize="10.00", label="8.08%\n24000×", labeldistance="0.50", penwidth="0.50"];
	2 [color="#e59f04", fontcolor="#ffffff", fontsize="10.00", label="kMeans(std::vector<Point, std::allocator<Point> >&, int, int)\n82.83%\n(0.00%)\n1×"];
	2 -> 3 [arrowsize="0.80", color="#71c908", fontcolor="#71c908", fontsize="10.00", label="63.64%\n79×", labeldistance="2.55", penwidth="2.55"];
	2 -> 4 [arrowsize="0.43", color="#0c688a", fontcolor="#0c688a", fontsize="10.00", label="18.18%\n79×", labeldistance="0.73", penwidth="0.73"];
	2 -> 17 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.01%\n1×", labeldistance="0.50", penwidth="0.50"];
	3 [color="#71c908", fontcolor="#ffffff", fontsize="10.00", label="assignToClusters(std::vector<Point, std::allocator<Point> >&, std::vector<Point, std::allocator<Point> > const&)\n63.64%\n(45.45%)\n79×"];
	3 -> 5 [arrowsize="0.35", color="#0d367e", fontcolor="#0d367e", fontsize="10.00", label="9.09%\n29388000×", labeldistance="0.50", penwidth="0.50"];
	3 -> 6 [arrowsize="0.35", color="#0d367e", fontcolor="#0d367e", fontsize="10.00", label="9.09%\n28440000×", labeldistance="0.50", penwidth="0.50"];
	4 [color="#0c688a", fontcolor="#ffffff", fontsize="10.00", label="updateCentroids(std::vector<Point, std::allocator<Point> > const&, std::vector<Point, std::allocator<Point> >&)\n18.18%\n(0.00%)\n79×"];
	4 -> 8 [arrowsize="0.35", color="#0d367e", fontcolor="#0d367e", fontsize="10.00", label="9.09%\n948000×", labeldistance="0.50", penwidth="0.50"];
	4 -> 12 [arrowsize="0.35", color="#0d367e", fontcolor="#0d367e", fontsize="10.00", label="9.09%\n948079×", labeldistance="0.50", penwidth="0.50"];
	5 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="std::vector<Point, std::allocator<Point> >::size() const\n9.09%\n(9.09%)\n29391034×"];
	6 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="calculateDistance(Point const&, Point const&)\n9.09%\n(9.09%)\n28440000×"];
	7 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::base() const\n9.09%\n(9.09%)\n1896316×"];
	8 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > >::operator++()\n9.09%\n(9.09%)\n948000×"];
	9 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()\n9.09%\n(0.00%)\n54031×"];
	9 -> 10 [arrowsize="0.35", color="#0d367e", fontcolor="#0d367e", fontsize="10.00", label="9.09%\n87×", labeldistance="0.50", penwidth="0.50"];
	10 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()\n9.09%\n(9.09%)\n87×"];
	11 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="_init\n9.09%\n(9.09%)"];
	12 [color="#0d367e", fontcolor="#ffffff", fontsize="10.00", label="bool __gnu_cxx::operator!=<Point const*, std::vector<Point, std::allocator<Point> > >(__gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > const&, __gnu_cxx::__normal_iterator<Point const*, std::vector<Point, std::allocator<Point> > > const&)\n9.09%\n(0.00%)\n948079×"];
	12 -> 7 [arrowsize="0.35", color="#0d367e", fontcolor="#0d367e", fontsize="10.00", label="9.09%\n1896158×", labeldistance="0.50", penwidth="0.50"];
	13 [color="#0d317d", fontcolor="#ffffff", fontsize="10.00", label="double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n8.08%\n(0.00%)\n24000×"];
	13 -> 14 [arrowsize="0.35", color="#0d317d", fontcolor="#0d317d", fontsize="10.00", label="8.08%\n24000×", labeldistance="0.50", penwidth="0.50"];
	14 [color="#0d317d", fontcolor="#ffffff", fontsize="10.00", label="double std::uniform_real_distribution<double>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<double>::param_type const&)\n8.08%\n(0.00%)\n24000×"];
	14 -> 15 [arrowsize="0.35", color="#0d317d", fontcolor="#0d317d", fontsize="10.00", label="8.08%\n24000×", labeldistance="0.50", penwidth="0.50"];
	15 [color="#0d317d", fontcolor="#ffffff", fontsize="10.00", label="std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()\n8.08%\n(0.00%)\n24000×"];
	15 -> 16 [arrowsize="0.35", color="#0d317d", fontcolor="#0d317d", fontsize="10.00", label="8.08%\n24000×", labeldistance="0.50", penwidth="0.50"];
	16 [color="#0d317d", fontcolor="#ffffff", fontsize="10.00", label="double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n8.08%\n(0.00%)\n24000×"];
	16 -> 9 [arrowsize="0.35", color="#0d317d", fontcolor="#0d317d", fontsize="10.00", label="8.08%\n48000×", labeldistance="0.50", penwidth="0.50"];
	17 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="void std::shuffle<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n1.01%\n(0.00%)\n1×"];
	17 -> 21 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.01%\n5999×", labeldistance="0.50", penwidth="0.50"];
	18 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="unsigned int std::uniform_int_distribution<unsigned long>::_S_nd<unsigned long, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, unsigned int>(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, unsigned int)\n1.01%\n(0.00%)\n6000×"];
	18 -> 9 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.01%\n6031×", labeldistance="0.50", penwidth="0.50"];
	19 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n1.01%\n(0.00%)\n6000×"];
	19 -> 20 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.01%\n6000×", labeldistance="0.50", penwidth="0.50"];
	20 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="unsigned long std::uniform_int_distribution<unsigned long>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned long>::param_type const&)\n1.01%\n(0.00%)\n6000×"];
	20 -> 18 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.01%\n6000×", labeldistance="0.50", penwidth="0.50"];
	21 [color="#0d1174", fontcolor="#ffffff", fontsize="10.00", label="std::pair<unsigned long, unsigned long> std::__gen_two_uniform_ints<unsigned long, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&>(unsigned long, unsigned long, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)\n1.01%\n(0.00%)\n5999×"];
	21 -> 19 [arrowsize="0.35", color="#0d1174", fontcolor="#0d1174", fontsize="10.00", label="1.01%\n5999×", labeldistance="0.50", penwidth="0.50"];
}
